function run_biobackup(dataprefix)% function run_marlinbackup(frompath,topath,dataprefix);% This is the top-level script for the back-up computer....%% dataprefix='lab';% this is the prefix of the datafiles% $Revision: 1.2 $ $Date: 2008/12/24 21:05:56 $ $Author: aperlin $	frompath = '\\spruce\BioSonics\';topath = 'c:\data\yq06a\biosonics\';polltime = 60;% this approximately how often the daq computer is polled in seconds.% Check that the frompath exists...if ~exist(frompath)  error(['The source directory: ' frompath ' can''t be found.  Check',  ...          'that the machine has been mounted']);end;if ~exist(topath)  error(['The source directory: ' topath ' can''t be found. Create',  ...          ' the directory']);end;while 1  fprintf(1,'Polling for new files in %s\n',frompath );  % first thing is to compare the two directory trees and make sure  % they are identical.  If not, do some copying....  % We can't automate because of the annoying naming convention  % MarlCham files%   fromp = [frompath '/raw/'];%   top = [topath '/raw/'];  fromp = frompath;  top = topath;  fromdir = [fromp dataprefix '*'];  todir = [top dataprefix '*'];  % files are sequential therefore lets strip the sequence numbers  % to compare....  d=dirdiff(fromdir,todir);  copyall(fromp,top,d);  fprintf(1,'\nWaiting %d seconds to poll again; on file: %d\n',...      polltime,polltime);  for j=1:polltime    fprintf(1,'-');    pause(1);   end;  fprintf('\n');end;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function copyall(fromdir,todir,names);  for i=1:length(names);    from = [fromdir '/' names{i}];    to = [todir '/'];    fprintf(1,'Copying %s to %s\n',from,to);    [status,msg]=copyfile(from,to);    if ~status      error(msg);    end;  end;  